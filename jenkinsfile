pipeline {
    agent any

        stages {
            stage('Clean Previous Containers') {
                steps {
                    sh 'docker-compose down || true'
                }
            }

        stage('Build Application') {
            steps {
                sh 'docker-compose build app'
            }
        }
        stage('Start Application') {
            steps {
                sh 'docker-compose up -d app'
                // Esperar a que la aplicación esté lista usando el nombre del servicio
                sh '''
                    timeout 120s bash -c '
                        while ! docker-compose exec -T app curl -f http://localhost:5050/login; do
                            sleep 5
                            echo "Esperando a que la aplicación esté lista..."
                        done
                    '
                '''
            }
        }

        stage('Run Cypress Tests') {
            steps {
                script {
                    // Ejecutar Cypress y obtener el ID del contenedor
                    def cypressContainer = sh(script: 'docker-compose run -d --rm cypress', returnStdout: true).trim()
                    
                    // Esperar a que termine la ejecución
                    sh "docker wait ${cypressContainer}"
                    
                    // Copiar el reporte del contenedor antes de que se elimine
                    sh """
                        mkdir -p mochawesome-report
                        docker cp ${cypressContainer}:/e2e/mochawesome-report/ ./mochawesome-report/ || echo "No se pudo copiar el reporte"
                    """
                    
                    // Limpiar el contenedor (se eliminará por --rm pero forzamos por si acaso)
                    sh "docker rm -f ${cypressContainer} >/dev/null 2>&1 || true"
                }
            }
        }

        stage('Cleanup') {
            steps {
                sh 'docker-compose down'
            }
        }
    }

    post {
        always {
            publishHTML target: [
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'mochawesome-report',
                reportFiles: 'mochawesome.html',
                reportName: 'Cypress Test Report'
            ]
        }
    }
}