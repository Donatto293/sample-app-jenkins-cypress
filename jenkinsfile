pipeline {
    agent any

        stages {
            stage('Clean Previous Containers') {
                steps {
                    sh 'docker-compose down || true'
                }
            }

        stage('Build Application') {
            steps {
                sh 'docker-compose build app'
            }
        }
        stage('Start Application') {
            steps {
                sh 'docker-compose up -d app'
                // Esperar a que la aplicación esté lista usando el nombre del servicio
                sh '''
                    timeout 120s bash -c '
                        while ! docker-compose exec -T app curl -f http://localhost:5050/login; do
                            sleep 5
                            echo "Esperando a que la aplicación esté lista..."
                        done
                    '
                '''
            }
        }

        stage('Run Cypress Tests') {
            steps {
                script {
                    // Ejecutar Cypress en modo detached y guardar el container id
                    def cypressContainer = sh(
                        script: '''
                          # Ejecuta Cypress y genera reporte autocontenido (inlineAssets)
                          docker-compose run -d --rm cypress npx cypress run \
                            --reporter mochawesome \
                            --reporter-options "reportDir=mochawesome-report,reportFilename=mochawesome,overwrite=true,html=true,json=false,inlineAssets=true"
                        ''',
                        returnStdout: true
                    ).trim()
                    
                    echo "Cypress container id: ${cypressContainer}"
                    
                    // Esperar que termine
                    sh "docker wait ${cypressContainer}"
                    
                    // Copiar el reporte del contenedor al workspace
                    sh """
                        mkdir -p mochawesome-report
                        docker cp ${cypressContainer}:/e2e/mochawesome-report/ ./mochawesome-report/ || echo "No se pudo copiar el reporte"
                        # forzamos eliminación por si --rm no actuó (seguro)
                        docker rm -f ${cypressContainer} >/dev/null 2>&1 || true
                    """
                }
            }
        }

        // <-- NUEVA ETAPA: modificar/inyectar mensaje en el HTML -->
        stage('Modify HTML Report') {
            steps {
                script {
                    // banner HTML que queremos insertar (usa variables de entorno)
                    def banner = """<div style="background-color:#4CAF50;color:white;padding:20px;text-align:center;margin-bottom:20px;">
  <h2>✅ Tests Ejecutados Exitosamente</h2>
  <p>Fecha de ejecución: ${new Date().format("yyyy-MM-dd HH:mm:ss")}</p>
  <p>Build: ${env.BUILD_NUMBER}</p>
</div>"""

                    // Escribimos el banner a un archivo temporal para evitar problemas con comillas en sed
                    writeFile file: 'mocha_banner.html', text: banner
                    
                    // Si hay archivos HTML en el reporte, insertarlos justo después de la etiqueta <body>
                    sh '''
                      if ls mochawesome-report/*.html > /dev/null 2>&1; then
                        for f in mochawesome-report/*.html; do
                          echo "Modificando reporte: $f"
                          # inserta el contenido de mocha_banner.html justo después de la línea que contiene <body>
                          sed -i '/<body>/r mocha_banner.html' "$f"
                        done
                      else
                        echo "No se encontraron archivos HTML en mochawesome-report"
                      fi
                    '''
                }
            }
        }

        stage('Cleanup') {
            steps {
                sh 'docker-compose down'
            }
        }
    }

    post {
        always {
            publishHTML target: [
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'mochawesome-report',
                reportFiles: 'mochawesome.html',
                reportName: 'Cypress Test Report'
            ]
        }
    }
}